# Spring
spring.application.name=backend_spring
spring.web.resources.add-mappings=false
logging.level.org.springframework.web = DEBUG
invitation.redirect.url=${INVITATION_REDIRECT_URI}
# feign client configurations
feign.client.config.flaskClient.connectTimeout=10000
feign.client.config.flaskClient.readTimeout=30000
feign.client.config.flaskClient.requestTimeout=60000
# Server
server.error.whitelabel.enabled=false
server.port=${PORT}
server.ssl.key-store=/app/keystore.p12
server.ssl.key-store-password=yourpassword
server.ssl.key-store-type=PKCS12
server.ssl.key-alias=myalias
# Auth0
okta.oauth2.issuer=${OKTA_OAUTH2_ISSUER}
okta.oauth2.audience=${OKTA_OAUTH2_AUDIENCE}
application.client-origin-url=${CLIENT_ORIGIN_URL}
application.database-connection=${DATABASE_CONNECTION}
auth0.domain=${AUTH0_DOMAIN}
auth0.client-id=${AUTH0_CLIENT_ID}
auth0.client-secret=${AUTH0_CLIENT_SECRET}
# Mercado Libre API
meli.app-id=${MELI_APP_ID}
meli.client-secret=${MELI_CLIENT_SECRET}
meli.access-token=${MELI_ACCESS_TOKEN}
meli.refresh-token=${MELI_REFRESH_TOKEN}
meli.code-login=${MELI_CODE_LOGIN}
meli.redirect-uri=${MELI_REDIRECT_URI}
# Mercado Libre urls peticiones
# Base URL
meli.url.base=https://api.mercadolibre.com
# Endpoints
meli.url.predict-category=/sites/MLA/domain_discovery/search
meli.url.refresh-token=/oauth/token
meli.url.get-categories=/sites/MLA/categories
meli.url.get-category=/categories
meli.url.trends=/trends/MLA
meli.url.highlight-top=/highlights/MLA/category
meli.url.product=/products/search?status=active&site_id=MLA&product_identifier
meli.url.product-additional-info=/products
# Conexion API Restful con mySql
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
spring.sql.init.platform=mysql
# spring.datasource.url=jdbc:mysql://mysql:3306/bd-inventomate?useSSL=false&allowPublicKeyRetrieval=true
spring.datasource.url=${URL_DATABASE}
# spring.datasource.url=jdbc:mysql://localhost:3306/bd-inventomate?useSSL=false&allowPublicKeyRetrieval=true
spring.datasource.username=${USER_DATABASE}
spring.datasource.password=${PASSWORD_DATABASE}
spring.jpa.show-sql=true
spring.jpa.generate-ddl= true
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
# Flask urls peticiones
# base URL
flask.url.base=http://127.0.0.1:5000/api/informe
# Endpoints
flask.url.proyeccion-de-ventas-add=/proyeccion-de-ventas/add
flask.url.proyeccion-de-ventas=/proyeccion-de-ventas
flask.url.proyeccion-de-ventas-delete=/proyeccion-de-ventas/delete
flask.url.sugerencias-pedidos-add=/sugerencias-pedidos/add
flask.url.sugerencias-pedidos=/sugerencias-pedidos
flask.url.sugerencias-pedidos-delete=/sugerencias-pedidos/delete
flask.url.tendencias-add=/tendencias/add
flask.url.tendencias=/tendencias
flask.url.tendencias-delete=/tendencias/delete
flask.url.obsolescencia=/obsolescencia
flask.url.obsolescencia-add=/obsolescencia/add
flask.url.obsolescencia-delete=/obsolescencia/delete
# email
email.password=${EMAIL_PASSWORD}
email.username=${EMAIL_USERNAME}